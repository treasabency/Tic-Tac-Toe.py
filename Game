board = ["-", "-", "-", 
         "-", "-", "-", 
         "-", "-", "-", ]

game_not_over = True

winner = None

current_player = "X"

def format():
  print("Tic Tac Toe")
  print("Identical symbols across, down or diagonally leads to a win. The game progresses by entering numbers 1-9 for the corresponding spots. It's a 2 player game. Enjoy!")
  print()
  print( "1" + " | " + "2" + " | " + "3" )
  print( "4" + " | " + "5" + " | " + "6" )
  print( "7" + " | " + "8" + " | " + "9" )
  print("\n")

def display_board():
  print( board[0] + " | " + board[1] + " | " + board[2] )
  print( board[3] + " | " + board[4] + " | " + board[5] )
  print( board[6] + " | " + board[7] + " | " + board[8] )
  print()

def play_game():
  format()
  display_board()
  while game_not_over:

    handle_turn(current_player)
    check_if_game_over()
    flip_player()
  
  if winner == "X" or winner == "O":
    print(winner + " won.")
  elif winner == None:
    print("Game is tie.")

def handle_turn(current_player):
  print(current_player + " 's turn")
  print()
  position = input("Choose a position from 1-9: ")

  valid  = False
  while not valid :
   while position not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]:
    position = input("Invalid input. Choose a position from 1-9: ")
   position = int(position) - 1
   if board[position] == "-":
    valid = True
   else:
    print("You can't go there. Try again!")

  board[position] = current_player
  display_board()

def check_if_game_over():
  check_if_win()
  check_if_tie()

def check_if_win():
  global winner

  row_win = check_row()
  col_win = check_col()
  diagonal_win = check_diagonal()

  if row_win:
    winner = row_win
  elif col_win:
    winner = col_win
  elif diagonal_win:
    winner = diagonal_win
  else:
    winner = None
  return

def check_row():
  global game_not_over
  row_1 = board[0] == board[1] == board[2] != "-"
  row_2 = board[3] == board[4] == board[5] != "-"
  row_3 = board[6] == board[7] == board[8] != "-"
  
  if row_1 or row_2 or row_3:
    game_not_over = False
  if row_1:
    return board[0] 
  elif row_2:
    return board[4]
  elif row_3:
    return board[7]
  else:
    return None

def check_col():
  global game_not_over
  col_1 = board[0] == board[3] == board[6] != "-"
  col_2 = board[1] == board[4] == board[7] != "-"
  col_3 = board[2] == board[5] == board[8] != "-"
  
  if col_1 or col_2 or col_3:
    game_not_over = False
  if col_1:
    return board[0] 
  elif col_2:
    return board[1]
  elif col_3:
    return board[2]
  else:
    return None

def check_diagonal():
  global game_not_over
  diagonal_1 = board[0] == board[4] == board[8] != "-"
  diagonal_2 = board[2] == board[4] == board[6] != "-"
  
  if diagonal_1 or diagonal_2: 
    game_not_over = False
  if diagonal_1:
    return board[0] 
  elif diagonal_2:
    return board[2]
  else:
    return None

def check_if_tie():
  global game_not_over

  if "-" not in board:
    game_not_over = False
  return

def flip_player():
  global current_player 

  if current_player == "X":
    current_player = "O"
  elif current_player == "O":
    current_player = "X"
  return
play_game()
